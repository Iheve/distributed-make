#!/usr/bin/env perl

use strict;
use warnings;

my ($out, @in) = @ARGV;
my ($m, $n);
my @A_in=();
my $size=0;
foreach (@in) {
	open(IN, " < $_");
	my $header = <IN>;
	chomp($header);
	my ($m1, $n1) = split(/ /, $header);
  ($m, $n)=($m1, $n1) unless defined $m and defined $n;
	die "error in sizes" unless $n == $n1 and $m == $m1;
  my @tmp;
	while(<IN>) {
	  chomp();
	  my @line = split / /;
	  push @tmp, [@line];
	}
	close(IN);
  $A_in[$size]=[@tmp];
  $size++;
}
	my @C;

	my ($i, $j);
	foreach $i (0..($m-1)) {
	  push @C, [];
	  foreach $j (0..($n-1)) {
      my $k;
      for($k=0;$k<$size;$k++){
        $C[$i][$j] += $A_in[$k][$i][$j];
      }
	  }
	}

	open(OUT, "> $out");
	print OUT "$m $n\n";
	foreach(@C) {
	  print OUT join(" ", @{$_})."\n";
	}
	close(OUT);
